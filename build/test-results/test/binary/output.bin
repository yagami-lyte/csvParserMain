jk<!DOCTYPE html>
jk=<html lang="en" xmlns:border="http://www.w3.org/1999/xhtml">
jk
jk<head>
jk    <meta charset="UTF-8">
jk@    <link rel="preconnect" href="https://fonts.googleapis.com">
jkI    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
jkÅ    <link href="https://fonts.googleapis.com/css2?family=Roboto+Slab:wght@200&family=Roboto:wght@100&family=Ubuntu&display=swap"
jk          rel="stylesheet">
jk:    <meta http-equiv="X-UA-Compatible" content="IE=edge">
jkK    <meta name="viewport" content="width=device-width, initial-scale=1.0">
jkh    <!--    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>-->
jks    <!--    <script src="https://cdnjs.cloudflare.com/ajax/libs/paginationjs/2.1.4/pagination.min.js"></script>-->
jkx    <!--    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/paginationjs/2.1.4/pagination.css"/>-->
jk
jk‚    <!--    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">-->
jk{    <!--    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.1.3/css/bootstrap.min.css">-->
jk
jk
jk‚    <!--    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">-->
jkt    <!--    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">-->
jkh    <!--    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>-->
jkk    <!--    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>-->
jk
jkj    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css"
jkw          integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
jk
jkC    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
jk`            integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
jk.            crossorigin="anonymous"></script>
jkW    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js"
jk`            integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
jk.            crossorigin="anonymous"></script>
jkX    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js"
jk`            integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
jk.            crossorigin="anonymous"></script>
jk
jk
jk,    <link rel="stylesheet" href="main.css">
jk    <title>Csv Parser</title>
jk</head>
jk<body>
jk<div class="header">
jk    <div class="logo">
jk*        <h1>CSV Parser And Validator</h1>
jk    </div>
jk</div>
jk
jk
jk<div class="row1">
jk    <div class="column">
jk$        <div id="csv" class="card">
jk            <div id="upload">
jk$                <div class="frame">
jk)                    <div class="center">
jk,                        <div class="title">
jkA                            <h11>Upload your CSV file here</h11>
jk                        </div>
jk
jk/                        <div class="dropzone">
jkl                            <input type="file" style="height: 0;width: 0;overflow: hidden;" name="csv-file"
jkT                                   data-cy="chooseFile" id="csv_id" accept=".csv"/>
jkD                            <label for="csv_id">Choose File</label>
jk                        </div>
jk
jkZ                        <a id="uploadCSV" href="#config" class="btn-get-started scrollto"
jk[                           onclick="getConfigFilesName();getConfigResponse();csvReader();"
jk>                           data-cy="upload"><b>Upload</b></a>
jk                    </div>
jk                </div>
jk
jk            </div>
jk        </div>
jk    </div>
jk</div>
jk
jk	<br><br>
jk
jk
jk<div id="config">
jk    <div class="container">
jkK        <h1 style="margin-top: 38%;"><b>Configure your CSV fields</b></h1>
jk        <br><br><br>
jk@        <h3> The fields in your CSV are listed down below.</h3>
jkx        <div style="width: 600px;align-items: center;justify-content: center; margin:auto;padding:20px;display: flex;">
jk™            <select name="type" id="listOfFileNames" style="display: block;   width:auto;height:auto;  padding: 16px 4px; border-radius:10px; background-size: 400% 400%;
jk#      background: radial-gradient(
jk            hsl(26, 33%, 80%),
jk            hsl(10, 3%, 54%)
jk	    );">
jk
jkL                <option value="">Please select the config filename</option>
jk            </select>
jkò            <button class="btn waves-effect waves-light" id = "fetchConfigButton" style="margin-left: 15px;margin-top: 3px; background-size: 400% 400%;
jk    background: radial-gradient(
jk            hsl(26, 33%, 80%),
jk            hsl(10, 3%, 54%)
jk    ) ;
jk9          ;color: black;" onclick="getConfigResponse()">
jk"                Fetch config file
jk            </button>
jk        </div>
jk
jk
jk9        <form onsubmit="return mySubmitFunction(event)">
jk            <div id="card-2">
jk
jk            </div>
jk        </form>
jk
jk
jk             <div id = "card-3">
jko                <div id = "fields" style="margin-left: 15%; margin-top: 1.5%; margin-bottom: 1.5%;width: 70%">
jkx                    <p style="margin-bottom: 2%" class="col s3"><b>Provide Configuration filename &nbsp;&nbsp;:</b></p>
jkÄ                    <input class="col s14" id="fileName" name = "filename" type="text" placeholder="Please enter the filename">
jk
jk
jk
jkT                    <div class="form-check" style="margin-top: 2%;font-size: 20px">
jkj                        <input type="checkbox" id="configCheckBox" name="configCheckBox" value="checked">
jkN                        <label class="form-check-label" for="configCheckBox">
jkW                            <strong>Tick the checkBox to save the config Data</strong>
jk!                        </label>
jk                    </div>
jk
jk                </div>
jk            </div>
jk
jkv                <div style="margin-left: 27%; display: none; align-items: center;justify-content: center; color:red;"
jk2                     id="config_name_validation">
jk[                    Configuration filename do not meet the requirement! Please Change it!!
jk                </div>
jk
jk
jk    </div>
jk</div>
jk
jk)<a style="  background: radial-gradient(
jk            hsl(26, 33%, 80%),
jk            hsl(10, 3%, 54%)
jkc    ) ;color: black;margin-left: 43%" id='view-errors' onclick="displayErrors();">View Errors </a>
jk
jkA<p style="text-align:center; color: red;" id='fields-empty'></p>
jk
jk
jk,<div class="loader" id="button-load"></div>
jk
jk<div class="container">
jk1    <h5 style="margin-left: 41%">CSV Errors</h5>
jk     <div id="error-msgs"></div>
jk</div>
jk
jk7<script src="main.js" type="text/javascript"></script>
jk</body>
jk
jk</html>
jk
jnhtml {
jn    scroll-behavior: smooth;
jn}
jn
jn.font-robo {
jnB    font-family: "Roboto", "Arial", "Helvetica Neue", sans-serif;
jn}
jn
jn
jn.card {
jn     -webkit-border-radius: 3px;
jn    -moz-border-radius: 3px;
jn    border-radius: 3px;
jn#    background-color: transparent;
jn}
jn
jn
jn
#card-2 {
jn>    -webkit-box-shadow: 0px 8px 20px 0px rgba(0, 0, 0, 0.15);
jn;    -moz-box-shadow: 0px 8px 20px 0px rgba(0, 0, 0, 0.15);
jn6    box-shadow: 0px 8px 20px 0px rgba(0, 0, 0, 0.15);
jn!    -webkit-border-radius: 10px;
jn    -moz-border-radius: 10px;
jn    border-radius: 10px;
jn    margin-left: -18%;
jn    margin-bottom: 25%;
jn    margin-top: 1.5%;
jn!    background: radial-gradient(
jn            hsl(0, 2%, 59%),
jn            hsl(12, 3%, 69%)
jn    );
jn    width: 140%;
jn    display: table;
jn    vertical-align: top;
jn}
jn
jn
#card-3 {
jn>    -webkit-box-shadow: 0px 8px 20px 0px rgba(0, 0, 0, 0.15);
jn;    -moz-box-shadow: 0px 8px 20px 0px rgba(0, 0, 0, 0.15);
jn6    box-shadow: 0px 8px 20px 0px rgba(0, 0, 0, 0.15);
jn!    -webkit-border-radius: 10px;
jn    -moz-border-radius: 10px;
jn    border-radius: 10px;
jn    margin-left: 10%;
jn    margin-bottom: 25%;
jn    margin-top: -15%;
jn!    background: radial-gradient(
jn            hsl(0, 2%, 59%),
jn            hsl(12, 3%, 69%)
jn    );
jn    width: 80%;
jn    display: table;
jn    vertical-align: top;
jn}
jn
jn
#myform {
jn    margin-top: 1.5%;
jn    margin-left: -60%;
jn}
jn
jn
jn#card-2 .card-heading {
jn    width: 29.1%;
jn}
jn
jn#card-2 .card-body {
jn    display: table-cell;
jn    padding: 80px 90px;
jn}
jn
jn@media (max-width: 767px) {
jn    #card-2 {
jn        display: block;
jn    }
jn
jn    #card-2 .card-heading {
jn        width: 100%;
jn        display: block;
jn        padding-top: 300px;
jn*        background-position: left center;
jn    }
jn
jn    #card-2 .card-body {
jn        display: block;
jn        padding: 60px 50px;
jn    }
jn}
jn
jn
jn/*input[type="checkbox"] {*/
jn"/*    -webkit-appearance: none;*/
jn/*    -moz-appearance: none;*/
jn/*    appearance: none;*/
jn2/*    -webkit-tap-highlight-color: transparent;*/
jn/*    cursor: pointer;*/
jn/*}*/
jn
jn#/*input[type="checkbox"]:focus {*/
jn/*    outline: 0;*/
jn/*}*/
jn
jn
.toggle {
jn    outline: 0;
jn    -webkit-appearance: none;
jn    -moz-appearance: none;
jn    appearance: none;
jn.    -webkit-tap-highlight-color: transparent;
jn    cursor: pointer;
jn    height: 22px;
jn    width: 42px;
jn    border-radius: 16px;
jn    display: inline-block;
jn    position: relative;
jn    border: 2px solid #474755;
jnC    background: linear-gradient(180deg, #2D2F39 0%, #1F2027 100%);
jn    transition: all .2s ease;
jn}
jn
jn.toggle:after {
jn    content: '';
jn    position: absolute;
jn    top: 2px;
jn    left: 2px;
jn    width: 15px;
jn    height: 15px;
jn    border-radius: 50%;
jn    background: white;
jn1    box-shadow: 0 1px 2px rgba(44, 44, 44, 0.2);
jn=    transition: all 0.2s cubic-bezier(0.5, 0.1, 0.75, 1.35);
jn}
jn
jn.toggle:checked {
jn    border-color: #654FEC;
jn}
jn
jn.toggle:checked:after {
jn!    transform: translatex(20px);
jn}
jn
jn'.custom-file-button input[type=file] {
jn"    margin-left: -2px !important;
jn}
jn
jnC.custom-file-button input[type=file]::-webkit-file-upload-button {
jn    display: none;
jn}
jn
jn=.custom-file-button input[type=file]::file-selector-button {
jn    display: none;
jn}
jn
jn".custom-file-button:hover label {
jn    background-color: #dde0e3;
jn    cursor: pointer;
jn}
jn
jn
jnV@import url('//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css');
jnk@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@200;300;400;500;600;700&display=swap');
jn
jn
jn	td, th {
jn    border: 1px solid #dddddd;
jn    text-align: center;
jn    padding: 8px;
jn}
jn
jntable {
jn$    font-family: arial, sans-serif;
jn    border-collapse: collapse;
jn    width: 100%;
jn}
jn
jn
marquee {
jn    font-size: 30px;
jn    font-weight: 800;
jn    color: #8ebf42;
jn    font-family: sans-serif;
jn}
jn
jnbody {
jn     background-size: 400% 400%;
jn!    background: radial-gradient(
jn            hsl(30, 41%, 48%),
jn            hsl(199, 14%, 49%)
jn    ) fixed;
jn+    animation: gradient 15s ease infinite;
jn    min-height: 100vh;
jn}
jn
jn@keyframes gradient {
jn	    0% {
jn$        background-position: 0 50%;
jn    }
jn
    50% {
jn'        background-position: 100% 50%;
jn    }
jn    100% {
jn$        background-position: 0 50%;
jn    }
jn}
jn
jnh1 {
jn    color: #333333;
jn    text-align: center;
jn    font-size: 40px;
jn'    font-family: 'Ubuntu', sans-serif;
jn    margin-top: 8%;
jn}
jn
jn
jnh2 {
jn    color: darkblue;
jn    text-align: left;
jn    margin-left: 1%;
jn    font-size: 25px;
jn}
jn
jnh3 {
jn    color: black;
jn    text-align: center;
jn    font-size: 25px;
jn    height: 35px;
jn'    font-family: 'Ubuntu', sans-serif;
jn    margin-top: -1%;
jn
jn}
jn
jnh4 {
jn    background: transparent;
jn    margin-bottom: 1em;
jn    color: black;
jn    font-size: 25px;
jn    font-weight: bold;
jn    margin-top: 5%;
jn'    font-family: 'Ubuntu', sans-serif;
jn&    transition: all 0.2s ease-in-out;
jn1    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);
jn
jn}
jn
jnh5 {
jn    color: #333333;
jn    font-size: 30px;
jn"    font-family: "Bodoni", serif;
jn    margin-left: 45%;
jn}
jn
jnh6 {
jn    color: #333333;
jn    margin-left: 3%;
jn    font-size: 20px;
jn"    font-family: "Bodoni", serif;
jn    font-weight: bold;
jn}
jn
jn
jn.logo {
jn    color: white;
jn    text-align: center;
jn    font-size: 25px;
jn'    font-family: 'Ubuntu', sans-serif;
jn    margin-left: 39%;
jn}
jn
jn
#config {
jn    border-radius: 10px;
jn    padding: 20px;
jn    width: 100%;
jn    min-height: 540px;
jn    margin-bottom: 2%;
jn}
jn
jn
#fields {
jn    padding: 10px;
jn    text-align: center;
jn    margin-left: -40%;
jn!    background: radial-gradient(
jn            hsl(26, 33%, 80%),
jn            hsl(10, 3%, 54%)
jn    );
jn    border-radius: 20px;
jn    width: 130%;
jn}
jn
jn
jn#error_msgs_list {
jn'    font-family: 'Ubuntu', sans-serif;
jn    font-size: medium;
jn    background: grey;
jn}
jn
jn#error-msgs {
jn    width: 50%;
jn    border-radius: 3px;
jn    padding: 20px;
jn    margin-left: 16%;
jn    margin-top: -2%;
jn    min-height: 600px;
jn}
jn
jn.custom-file-input {
jn    border: 1px solid #999;
jn    border-radius: 3px;
jn    padding: 5px 8px;
jn    text-shadow: 1px 1px #fff;
jn    font-weight: 1000;
jn    font-size: 10pt;
jn    width: 180px;
jn}
jn
jninput[type=text], select {
jn    width: 120px;
jn    font-size: 14px;
jn    padding: 12px 20px;
jn    display: inline-block;
jn    border-radius: 7px;
jn    color: black;
jn    box-sizing: border-box;
jn    margin: 8px 0 8px 1%;
jn    height: 40px;
jn}
jn
jninput[type=number], select {
jn    width: 195px;
jn    padding: 2px 2px 2px 2px;
jn    display: inline-block;
jn    border: 1px solid #ccc;
jn    border-radius: 7px;
jn    box-sizing: border-box;
jn    margin: 7px 0 7px 4%;
jn}
jn
jn/*[type="file"] {*/
jn/*    height: 0;*/
jn/*    overflow: hidden;*/
jn/*    width: 0;*/
jn/*}*/
jn
jn[type="file"] + label {
jn    border: none;
jn!    background: radial-gradient(
jn             hsl(180, 12%, 37%),
jn            hsl(11, 58%, 69%)
jn    ) fixed;
jn    border-radius: 5px;
jn    color: black;
jn    cursor: pointer;
jn    display: inline-block;
jn&    font-family: 'Rubik', sans-serif;
jn    font-size: inherit;
jn    font-weight: 500;
jn    margin-bottom: 1rem;
jn    outline: none;
jn    padding: 1rem 50px;
jn    position: relative;
jn    transition: all 0.3s;
jn    vertical-align: middle;
jn}
jn
jn[type="file"] + label:hover {
jn    background-color: #d3460d;
jn}
jn
jn[type="file"] + label.btn-1 {
jn    background-color: #f79159;
jn    box-shadow: 0 6px #f57128;
jn    transition: none;
jn}
jn
jn$[type="file"] + label.btn-1:hover {
jn    box-shadow: 0 4px #f57128;
jn    top: 2px;
jn}
jn
jn[type="file"] + label.btn-2 {
jn    background-color: #99c793;
jn    border-radius: 50px;
jn    overflow: hidden;
jn}
jn
jn&[type="file"] + label.btn-2::before {
jn    color: #fff;
jn    content: "\f382";
jn'    font-family: "Font Awesome 5 Pro";
jn    font-size: 100%;
jn    height: 100%;
jn    right: 130%;
jn    line-height: 3.3;
jn    position: absolute;
jn    top: 0px;
jn    transition: all 0.3s;
jn}
jn
jn$[type="file"] + label.btn-2:hover {
jn    background-color: #497f42;
jn}
jn
jn,[type="file"] + label.btn-2:hover::before {
jn    right: 75%;
jn}
jn
jn[type="file"] + label.btn-3 {
jn    background-color: #ee6d9e;
jn    border-radius: 0;
jn    overflow: hidden;
jn}
jn
jn#[type="file"] + label.btn-3 span {
jn    display: inline-block;
jn    height: 100%;
jn    transition: all 0.3s;
jn    width: 100%;
jn}
jn
jn&[type="file"] + label.btn-3::before {
jn    color: #fff;
jn    content: "\f382";
jn'    font-family: "Font Awesome 5 Pro";
jn    font-size: 130%;
jn    height: 100%;
jn    left: 0;
jn    line-height: 2.6;
jn    position: absolute;
jn    top: -180%;
jn    transition: all 0.3s;
jn    width: 100%;
jn}
jn
jn$[type="file"] + label.btn-3:hover {
jn    background-color: #ae144f;
jn}
jn
jn)[type="file"] + label.btn-3:hover span {
jn!    transform: translateY(300%);
jn}
jn
jn,[type="file"] + label.btn-3:hover::before {
jn    top: 0;
jn}
jn
jn.wrapper {
jn    background-color: #fff;
jn    border-radius: 1rem;
jn    margin: 0 auto;
jn    max-width: 500px;
jn    padding: 2rem;
jn    width: 100%;
jn}
jn
jn
.footer {
jn    font-size: 0.8rem;
jn    margin-bottom: 0;
jn    margin-top: 3rem;
jn}
jn
jnh1, p {
jn    margin-bottom: 2rem;
jn}
jn
jnh1 {
jn&    font-family: 'Rubik', sans-serif;
jn    font-size: 1.7rem;
jn    color: red;
jn}
jn
jna {
jn    color: #31c1ef;
jn    text-decoration: none;
jn}
jn
jn
jn
/*label {
jn    background: transparent;
jn    padding-right: 5px;
jn    margin-bottom: 1em;
jn    color: black;
jn    font-size: 20px;
jn    font-weight: bold;
jn    margin-top: 5%;
jn'    font-family: 'Ubuntu', sans-serif;
jn&    transition: all 0.2s ease-in-out;
jn1    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);
jn}*/
jn
jn
jnp {
jn    color: #333333;
jn    font-size: 20px;
jn    font-weight: bold;
jn'    font-family: 'Ubuntu', sans-serif;
jn&    transition: all 0.2s ease-in-out;
jn}
jn
jn	button {
jn    background-color: black;
jn    border: none;
jn    color: white;
jn    padding: 15px 32px;
jn    text-align: center;
jn    text-decoration: none;
jn    display: inline-block;
jn    font-size: 16px;
jn    margin: 4px 2px;
jn    cursor: pointer;
jn4    -webkit-transition-duration: 0.4s; /* Safari */
jn    transition-duration: 0.4s;
jn}
jn
jn.form-type {
jn    justify-content: center;
jn}
jn
jn#fileName {
jn    width: 300px;
jn}
jn
jn#uploadCSV {
jn!    background: radial-gradient(
jn             hsl(180, 12%, 37%),
jn            hsl(11, 56%, 69%)
jn    ) fixed;
jn    color: black;
jn    padding: 15px 32px;
jn    border-radius: 4px;
jn    text-align: center;
jn    text-decoration: none;
jn    display: inline-block;
jn    font-size: 20px;
jn'    font-family: 'Ubuntu', sans-serif;
jn    cursor: pointer;
jn'    -webkit-transition-duration: 0.4s;
jn    transition-duration: 0.4s;
jn    margin: 4px 2px -97px -1%;
jn    border-color: black;
jn    box-sizing: border-box;
jn    height: 50px;
jn}
jn
jn#view-errors {
jn    border: 1px solid #ccc;
jn    border-radius: 7px;
jn'    font-family: 'Ubuntu', sans-serif;
jn!    background: radial-gradient(
jn            hsl(5, 66%, 51%),
jn            hsl(11, 56%, 69%)
jn    );
jn    color: white;
jn    padding: 15px 30px;
jn    text-align: center;
jn    text-decoration: none;
jn    display: inline-block;
jn    font-size: 25px;
jn    cursor: pointer;
jn'    -webkit-transition-duration: 0.4s;
jn    transition-duration: 0.4s;
jn    margin: 4px 7% 4px 46%;
jn}
jn
jnbutton:hover {
jnV    box-shadow: 0 12px 16px 0 rgba(0, 0, 0, 0.24), 0 17px 50px 0 rgba(0, 0, 0, 0.19);
jn}
jn
jninput[type=submit] {
jn    width: 100%;
jn    background-color: #4CAF50;
jn    color: black;
jn    padding: 14px 20px;
jn    margin: 8px 0;
jn    border: none;
jn    border-radius: 4px;
jn    cursor: pointer;
jn}
jn
jninput[type=submit]:hover {
jn    background-color: #45a049;
jn}
jn
jn
jn
.header {
jn    z-index: 10;
jn!    background: radial-gradient(
jn'            hsla(351, 53%, 67%, 0.97),
jn            hsl(119, 8%, 51%)
jn    ) fixed;
jn    position: fixed;
jn    top: 0;
jn    left: 0;
jn    height: 70px;
jn    width: 100%;
jn    display: flex;
jn$    justify-content: space-between;
jn    align-items: center;
jn    border-radius: 99px;
jn}
jn
jn
jn
.upload {
jn    background-color: #a99a86;
jn    height: 5%;
jn    display: none;
jn!    -webkit-border-radius: 30px;
jn*    -webkit-background-clip: padding-box;
jn    -moz-border-radius: 2px;
jn#    -moz-background-clip: padding;
jn    border-radius: 6px;
jn"    background-clip: padding-box;
jn    padding: 20px 20px;
jn    margin-top: 4%;
jn    color: white;
jn    cursor: pointer;
jn    font-weight: 600;
jn'    font-family: 'Ubuntu', sans-serif;
jn}
jn
jn
jn	.card1 {
jn0    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
jn    padding: 16px;
jn    text-align: center;
jn    background-color: white;
jn!    border-left: 4px solid grey;
jn"    border-right: 4px solid grey;
jn     border-top: 4px solid grey;
jn#    border-bottom: 4px solid grey;
jn}
jn
jn
.column {
jn    width: 50%;
jn    padding: 0 10px;
jn}
jn
jn.row {
jn    margin-left: 34%;
jn    margin-top: 3%;
jn}
jn
jn.row1 {
jn    margin-bottom: 40%;
jn    text-align: center;
jn    margin-left: 30%;
jn}
jn
jn.row:after {
jn    content: "";
jn    display: table;
jn    clear: both;
jn}
jn
jn'@media screen and (max-width: 600px) {
jn    .column {
jn        width: 100%;
jn        display: block;
jn        margin-bottom: 20px;
jn    }
jn}
jn
jn.card1-panel {
jn'    font-family: 'Ubuntu', sans-serif;
jn    border-radius: 20px;
jn    margin-left: -60%;
jn    padding: 40px;
jn    margin-top: -20%;
jn    width: 1000px;
jn    min-height: 100px;
jn    overflow: hidden;
jn    opacity: 80%;
jn    background: #FFFFF0;
jn1    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
jn}
jn
jn.success-msg {
jn    padding: 10px;
jn    box-sizing: border-box;
jn    border: 3px solid black;
jn    color: black;
jn    margin: 10px 0 10px 2%;
jn}
jn
jn
.switch {
jn    position: relative;
jn    display: inline-block;
jn    width: 20px;
jn    height: 30px;
jn    margin-top: 5%;
jn    margin-right: 4%;
jn    margin-left: -12%;
jn
jn}
jn
jn.switch input {
jn    opacity: 0;
jn    width: 4%;
jn    height: 0;
jn}
jn
jn.chooseFile {
jn    margin-left: -200%;
jn}
jn
jn
.slider {
jn    position: absolute;
jn    cursor: pointer;
jn    top: 0;
jn    left: 0;
jn    right: 0;
jn    bottom: 0;
jn    width: 300%;
jn    margin-left: -260%;
jn    background-color: #ccc;
jn    -webkit-transition: .4s;
jn    transition: .4s;
jn}
jn
jn.slider:before {
jn    position: absolute;
jn    content: "";
jn    font-size: 16px;
jn    height: 26px;
jn    width: 26px;
jn    left: 4px;
jn    bottom: 3px;
jn    background-color: white;
jn    -webkit-transition: .4s;
jn    transition: .4s;
jn}
jn
jninput:checked + .slider {
jn    background-color: #2196F3;
jn}
jn
jninput:focus + .slider {
jn!    box-shadow: 0 0 1px #2196F3;
jn}
jn
jn!input:checked + .slider:before {
jn)    -webkit-transform: translateX(26px);
jn%    -ms-transform: translateX(26px);
jn!    transform: translateX(26px);
jn}
jn
jn.slider.round {
jn    border-radius: 24px;
jn}
jn
jn.slider.round:before {
jn    border-radius: 50%;
jn}
jn
jn.form-container {
jn    padding: 10px;
jn    background-color: white;
jn}
jn
jnO.form-container input[type=text]:focus, .form-container input[type=password] {
jn    width: 100%;
jn    padding: 15px;
jn    border: none;
jn    background: #f1f1f1;
jn}
jn
jnU.form-container input[type=text]:focus, .form-container input[type=password]:focus {
jn    background-color: #ddd;
jn    outline: none;
jn}
jn
jn
jntextarea {
jn    overflow-y: scroll;
jn    height: 150px;
jn    resize: none;
jn    width: 50%;
jn    padding: 15px;
jn    margin: 5px 0 22px 8px;
jn    border: none;
jn    background: #f1f1f1;
jn    border-radius: 10px;
jn
jn}
jn
jn#list {
jn"    font-family: "Bodoni", serif;
jn    font-size: 20px;
jn}
jn
jn	#outer {
jn    width: 100%;
jn}
jn
jn	.inner {
jn    display: inline-block;
jn}
jn
jn
jn.button-control a {
jn    border: 1px solid #ccc;
jn    border-radius: 7px;
jn    background: #333333;
jn'    font-family: 'Ubuntu', sans-serif;
jn    color: white;
jn    padding: 15px 30px;
jn    text-decoration: none;
jn    font-size: 25px;
jn    margin: 4px 2px;
jn    cursor: pointer;
jn'    -webkit-transition-duration: 0.4s;
jn    transition-duration: 0.4s;
jn    display: inline-block;
jn    visibility: hidden;
jn$    justify-content: space-between;
jn}
jn
jn.button-control {
jn    text-align: center;
jn}
jn
jn
jn#button-load {
jn    color: black;
jn    padding: 12px 24px;
jn    font-size: 36px;
jn    text-align: center;
jn    margin-left: 48%;
jn    margin-top: 3%;
jn    visibility: hidden;
jn    radius: 24px;
jn}
jn
jn
jn.pagination ul {
jn    width: 100%;
jn    align-items: center;
jn    justify-content: center;
jn    display: flex;
jn    flex-wrap: wrap;
jn    padding: 8px;
jn0    box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
jn}
jn
jn.pagination ul li {
jn    list-style: none;
jn    line-height: 45px;
jn    text-align: center;
jn    font-size: 18px;
jn    font-weight: 500;
jn    cursor: pointer;
jn    user-select: none;
jn    margin: 0 10px 0 10px;
jn    transition: all 0.3s ease;
jn}
jn
jn.pagination ul li.numb {
jn    list-style: none;
jn    height: 45px;
jn    width: 60px;
jn    margin: 0 3px;
jn    line-height: 45px;
jn    border-radius: 50%;
jn}
jn
jn.pagination ul li.numb.first {
jn    margin: 0 3px 0 -5px;
jn}
jn
jn.pagination ul li.numb.last {
jn    margin: 0 -5px 0 3px;
jn}
jn
jn.pagination ul li.dots {
jn    font-size: 22px;
jn    cursor: default;
jn}
jn
jn.pagination ul li.btn {
jn    padding: 0 20px;
jn    border-radius: 50px;
jn}
jn
jn.pagination li.active,
jn.pagination ul li.numb:hover,
jn%.pagination ul li:first-child:hover,
jn%.pagination ul li:last-child:hover {
jn    color: #fff;
jn    background: #000;
jn}
jn
jn
.loader {
jn#    animation: rotate 1s infinite;
jn    height: 50px;
jn    width: 50px;
jn}
jn
jn.loader:before,
jn.loader:after {
jn    border-radius: 50%;
jn    content: '';
jn    display: block;
jn    height: 20px;
jn    width: 20px;
jn}
jn
jn.loader:before {
jn"    animation: ball1 1s infinite;
jn    background-color: #cb2025;
jn"    box-shadow: 30px 0 0 #f8b334;
jn    margin-bottom: 10px;
jn}
jn
jn.loader:after {
jn"    animation: ball2 1s infinite;
jn    background-color: #00a096;
jn"    box-shadow: 30px 0 0 #97bf0d;
jn}
jn
jn@keyframes rotate {
jn	    0% {
jn4        -webkit-transform: rotate(0deg) scale(0.8);
jn1        -moz-transform: rotate(0deg) scale(0.8);
jn    }
jn
    50% {
jn6        -webkit-transform: rotate(360deg) scale(1.2);
jn3        -moz-transform: rotate(360deg) scale(1.2);
jn    }
jn    100% {
jn6        -webkit-transform: rotate(720deg) scale(0.8);
jn3        -moz-transform: rotate(720deg) scale(0.8);
jn    }
jn}
jn
jn@keyframes ball1 {
jn	    0% {
jn&        box-shadow: 30px 0 0 #f8b334;
jn    }
jn
    50% {
jn#        box-shadow: 0 0 0 #f8b334;
jn        margin-bottom: 0;
jn2        -webkit-transform: translate(15px, 15px);
jn/        -moz-transform: translate(15px, 15px);
jn    }
jn    100% {
jn&        box-shadow: 30px 0 0 #f8b334;
jn        margin-bottom: 10px;
jn    }
jn}
jn
jn@keyframes ball2 {
jn	    0% {
jn&        box-shadow: 30px 0 0 #97bf0d;
jn    }
jn
    50% {
jn#        box-shadow: 0 0 0 #97bf0d;
jn        margin-top: -20px;
jn2        -webkit-transform: translate(15px, 15px);
jn/        -moz-transform: translate(15px, 15px);
jn    }
jn    100% {
jn&        box-shadow: 30px 0 0 #97bf0d;
jn        margin-top: 0;
jn    }
jn}
jn
jn
jnH@import url(https://fonts.googleapis.com/css?family=Open+Sans:700,300);
jn
jn	.frame {
jn    position: absolute;
jn    left: 35%;
jn    width: 650px;
jn    height: 440px;
jn    margin-top: 300px;
jn    margin-left: -200px;
jn    border-radius: 39px;
jn3    box-shadow: 4px 8px 16px 0 rgba(0, 0, 0, 0.1);
jn    overflow: hidden;
jn    color: #acacac;
jn5    font-family: "Open Sans", Helvetica, sans-serif;
jn}
jn
jn
.center {
jn    position: absolute;
jn    top: 40%;
jn    left: 50%;
jn&    transform: translate(-50%, -50%);
jn    width: 550px;
jn    height: 360px;
jn    border-radius: 39px;
jn4    box-shadow: 8px 10px 15px 0 rgba(0, 0, 0, 0.2);
jn    display: flex;
jn!    background: radial-gradient(
jn             hsl(180, 35%, 73%),
jn            hsl(18, 29%, 60%)
jn    ) fixed;
jn    align-items: center;
jn#    justify-content: space-evenly;
jn    flex-direction: column;
jn}
jn
jn
jnh1 {
jn    font-size: 36px;
jn    font-weight: 500;
jn    color: black;
jn}
jn
jn
jnh11 {
jn    font-size: 34px;
jn    color: black;
jn    border-radius: 6px;
jn}
jn
jn.dropzone {
jn    width: 200px;
jn    height: 10px;
jn    margin-top: -2%;
jn}
jn
jn.upload-icon {
jn    margin: 25px 2px 2px 2px;
jn}
jn
jn
jn.upload-input {
jn    position: relative;
jn    top: -62px;
jn    left: 0;
jn    width: 100%;
jn    height: 100%;
jn    opacity: 0;
jn}
jn
jn.btn {
jn    display: block;
jn    height: 40px;
jn    color: #fff;
jn    border-radius: 3px;
jn    border: 0;
jn&    transition: all 0.3s ease-in-out;
jn    font-size: 14px;
jn}
jn
jn.upload-btn-wrapper {
jn    position: relative;
jn    overflow: hidden;
jn    display: inline-block;
jn}
jn
jn
jo/
jp/add-meta-data
juvar payload = []
juvar result = []
juvar fields = []
juvar fieldCount = 0
juvar configName = []
ju
ju
ju3function checkIfConfigNameAlreadyExit(file_name) {
ju7    if (configName.indexOf(file_name) !== -1) return 1
ju    return 0
ju}
ju
ju function validateConfigName() {
ju>    var file_name = document.getElementById("fileName").value
juH    var getCheckBox = document.getElementById("configCheckBox").checked
juX    if ((file_name === "" || checkIfConfigNameAlreadyExit(file_name)) && getCheckBox) {
juS        document.getElementById("config_name_validation").style.display = 'block';
ju        return 0
ju    }
ju    return 1
ju}
ju
jufunction csvReader() {
juX    localStorage.setItem("csv", document.getElementById("csv_id").value.split("\\")[2])
ju:    var csv = document.getElementById("csv_id").files[0];
ju%    const reader = new FileReader();
ju-    reader.onload = async function (event) {
ju"        csv = event.target.result
juL        console.log(document.getElementById("csv_id").value.split("\\")[2])
ju0        var lines = csv.toString().split("\n");
ju+        var headers = lines[0].split(",");
ju         showColFields(headers);
ju        fields.push(headers)
ju5        for (var i = 1; i < lines.length - 1; i++) {
ju            var obj = {};
ju3            var currentLine = lines[i].split(",");
ju7            for (var j = 0; j < headers.length; j++) {
juF                obj[headers[j]] = currentLine[j].replaceAll('"', '');
ju            }
ju            result.push(obj);
ju
        }
ju    };
ju    reader.readAsText(csv);
ju}
ju
ju
ju&async function getConfigFilesName() {
ju1    var resp = await fetch('get-config-files', {
ju        method: 'GET',
ju    })
ju
ju    if (resp.status === 200) {
ju*        var jsonData = await resp.json();
ju        console.log(jsonData)
ju&        setConfigInDropDown(jsonData)
ju    }
ju}
ju
ju'function setConfigInDropDown(object) {
ju    console.log(object)
ju    for (var i in object) {
ju        console.log(object[i])
ju&        console.log(object[i] !== "")
ju         if (object[i] !== "") {
ju#            for (j in object[i]) {
juS                let fileNameDropDown = document.getElementById("listOfFileNames");
juO                var fileNameDropdownOption = document.createElement("option");
ju=                fileNameDropdownOption.value = object[i][j];
ju<                fileNameDropdownOption.text = object[i][j];
juF                fileNameDropDown.appendChild(fileNameDropdownOption);
ju/                configName.push(object[i][j]);
ju            }
ju
        }
ju    }
ju}
ju
ju%async function getConfigResponse() {
juF    let configName = document.getElementById("listOfFileNames").value
ju    if (configName !== "") {
ju8        var resp = await fetch('get-config-response', {
ju            method: 'POST',
ju?            body: JSON.stringify([{"configName": configName}])
ju        })
ju
ju#        if (resp.status === 200) {
ju.            var jsonData = await resp.json();
ju"            console.log(jsonData)
ju(            setValuesInConfig(jsonData)
ju
        }
ju    }
ju}
ju
ju%function setValuesInConfig(object) {
ju    console.log(object)
ju    for (var i in object) {
ju        console.log(object[i])
ju&        console.log(object[i] !== "")
ju         if (object[i] !== "") {
ju#            for (j in object[i]) {
ju:                changeDefaultValuesOfConfig(object[i][j])
ju            }
ju
        }
ju    }
ju}
ju
ju/function changeDefaultValuesOfConfig(object) {
ju!    for (var fields in object) {
ju        console.log(fields)
ju%        console.log(`type${fields}`)
juY        var valueOfTypeId = document.getElementById(`type${fields}`.replaceAll('"', ''))
ju&        if (valueOfTypeId !== null) {
ju-            setDefaultValues(object, fields)
ju
        }
ju    }
ju}
ju
ju,function setDefaultValues(object, fields) {
jua    document.getElementById(`type${fields}`.replaceAll('"', '')).value = object[fields]["type"];
juh    document.getElementById(`fixed-len${fields}`.replaceAll('"', '')).value = object[fields]["length"];
juk    document.getElementById(`allowNull${fields}`.replaceAll('"', '')).value = object[fields]["nullValue"];
ju5    if (object[fields]["nullValue"] === "Allowed") {
ju_        document.getElementById(`allowNull${fields}`.replaceAll('"', '')).checked = "checked";
ju    }
jua    document.getElementById(`date${fields}`.replaceAll('"', '')).value = object[fields]["date"];
jui    document.getElementById(`dateTime${fields}`.replaceAll('"', '')).value = object[fields]["dateTime"];
jum    document.getElementById(`dependent${fields}`.replaceAll('"', '')).value = object[fields]["dependentOn"];
jun    document.getElementById(`dep-val${fields}`.replaceAll('"', '')).value = object[fields]["dependentValue"];
jua    document.getElementById(`time${fields}`.replaceAll('"', '')).value = object[fields]["time"];
ju
ju!    alterDateTimeOptions(fields)
ju}
ju
ju(function alterDateTimeOptions(fields) {
ju    alterDateOption(fields)
ju     alterDateTimeOption(fields)
ju    alterTimeOption(fields)
ju
juZ    const typeValue = document.getElementById(`type${fields}`.replaceAll('"', '')).value;
ju     if (typeValue !== "Date") {
juP        document.getElementById(`date${fields}`.replaceAll('"', '')).value = ''
ju    }
ju     if (typeValue !== "Time") {
juP        document.getElementById(`time${fields}`.replaceAll('"', '')).value = ''
ju    }
ju$    if (typeValue !== "DateTime") {
juT        document.getElementById(`dateTime${fields}`.replaceAll('"', '')).value = ''
ju    }
ju}
ju
ju'function alterDateTimeOption(fields) {
ju]    if (document.getElementById(`type${fields}`.replaceAll('"', '')).value === "DateTime") {
jua        document.getElementById(`dateTime${fields}`.replaceAll('"', '')).style.display = 'block'
juc        document.getElementById(`dateTimeDiv${fields}`.replaceAll('"', '')).style.display = 'flex'
juh        document.getElementById(`dateTimeFormats${fields}`.replaceAll('"', '')).style.display = 'block'
juP        document.getElementById(`time${fields}`.replaceAll('"', '')).value = ''
juP        document.getElementById(`date${fields}`.replaceAll('"', '')).value = ''
juU        document.getElementById(`fixed-len${fields}`.replaceAll('"', '')).value = ''
ju    }
ju}
ju
ju#function alterDateOption(fields) {
juY    if (document.getElementById(`type${fields}`.replaceAll('"', '')).value === "Date") {
ju]        document.getElementById(`date${fields}`.replaceAll('"', '')).style.display = 'block'
ju_        document.getElementById(`dateDiv${fields}`.replaceAll('"', '')).style.display = 'flex'
jud        document.getElementById(`dateFormats${fields}`.replaceAll('"', '')).style.display = 'block'
juc        document.getElementById(`dateTimeDiv${fields}`.replaceAll('"', '')).style.display = 'none'
juT        document.getElementById(`dateTime${fields}`.replaceAll('"', '')).value = ''
juP        document.getElementById(`time${fields}`.replaceAll('"', '')).value = ''
juU        document.getElementById(`fixed-len${fields}`.replaceAll('"', '')).value = ''
ju    }
ju}
ju
ju#function alterTimeOption(fields) {
juY    if (document.getElementById(`type${fields}`.replaceAll('"', '')).value === "Time") {
ju]        document.getElementById(`time${fields}`.replaceAll('"', '')).style.display = 'block'
ju_        document.getElementById(`timeDiv${fields}`.replaceAll('"', '')).style.display = 'flex'
jud        document.getElementById(`timeFormats${fields}`.replaceAll('"', '')).style.display = 'block'
ju_        document.getElementById(`dateDiv${fields}`.replaceAll('"', '')).style.display = 'none'
juT        document.getElementById(`dateTime${fields}`.replaceAll('"', '')).value = ''
juP        document.getElementById(`date${fields}`.replaceAll('"', '')).value = ''
juU        document.getElementById(`fixed-len${fields}`.replaceAll('"', '')).value = ''
ju    }
ju}
ju
jufunction mySubmitFunction(e) {
ju    e.preventDefault();
ju    // someBug();
ju    return false;
ju}
ju
ju function showColFields(lines) {
ju:    for (var i = 1, j = 0; i <= lines.length; i++, j++) {
ju        fieldCount += 1
ju1        var row = document.createElement('div');
ju7        var field = `${lines[j]}`.replaceAll('"', '');
ju)        row.setAttribute("class", "row")
ju.        row.setAttribute("id", `row${field}`)
ju        row.innerHTML = `
ju
ju	        
ju%        <div id="addConfig${field}">
ju             <div id = "fields">
ju
ju5              <h2 class="title"><b>${field}</b></h2>
ju+                    <div class="form-row">
ju
juX<!--                       <p><span id="typeEmpty${field}" class="error"></span></p>-->
ju
ju
juS                      <div class="form-group col-md-1.5" style="margin-left: 1%;">
juU                      <select class="form-control" data-cy="type" id="type${field}" 
ju»                            onchange="showDateTimeOptions(this.value,'dateDiv${field}','dateFormats${field}' , 'date${field}','timeDiv${field}','timeFormats${field}','time${field}','dateTimeDiv${field}','dateTimeFormats${field}' , 'dateTime${field}' ,'length-div${field}', 'value-div${field},uploadFileDiv${field}');" required>
jua                               <option selected="selected" value="">Choose Type of Data</option>
juG                                <option value="Number">Number</option>
juS                                <option value="AlphaNumeric">AlphaNumeric</option>
juM                                <option value="Alphabets">Alphabets</option>
juX                                <option value="FloatingNumber">Floating Number</option>
juC                                <option value="Text">Text</option>
juL                                <option value="DateTime">Date Time</option>
juC                                <option value="Date">Date</option>
juC                                <option value="Time">Time</option>
juE                                <option value="Email">Email</option>
ju&                            </select>
ju                      </div>
ju                      
ju                      
ju                      
ju              
ju
juy                      <div class="form-group col-md-1." style="margin-left: 0.5%;display:flex;" id="length-div${field}">
ju»                        <input type="number" class="form-control"  placeholder="Enter Length" min=1 onkeypress="return event.charCode >= 49" type="number" id="fixed-len${field}" data-cy="fixed-len" >
ju                      </div>
ju                      
ju                  
ju                    
ju–                        <button style="margin-left: 0.8%;margin-top: 0.5%" class="btn btn-primary btn-sm" type="button"  data-toggle="modal" data-target="#chooseValues${field}">Upload or Type Values</button>
ju                     
ju
         
ju
ju®                    <div style="margin-left: 1%;margin-top: 1%" id = "allowEmptyValues1${field}" class="form-group col-md-0" style=" ;margin-top: 1%;margin-left: 6%;">
ju9                      <label >Allow Empty Values</label>
ju                    </div>
ju
ju¿                    <div style= "margin-top: 1%;margin-left: -2.5% " id = "allowEmptyValues2${field}" class="form-group col-md-1" style=" white-space: nowrap;margin-left: -2%;margin-top:1%;">
ju•                      <input id="allowNull${field}" value="Not Allowed" onclick="toggleYesOrNo(this.id);" style="margin-left: 1.5%;" type="checkbox" class="toggle">
ju                    </div>
ju
ju
juR                    <div class="form-group col-md-1.5" style="margin-left: -2%;">
juK                      <select id="dependent${field}" class="form-control">
juk                        <option disabled="disabled" value ="" selected="selected">Dependent Field</option>
ju3                        ${lines.map((element) => {
juY            return `<option value='${element}'>${element.replaceAll('"', '')}</option>`;
ju        })}
ju                       </select>
ju                      </div>
ju
ju
ju
jue                        <div class="form-group col-md-0" style="margin-left: 0.5%;margin-top: 0.5%">
ju|                          <input id="dep-val${field}"  class="form-control" id="inputEmail4" placeholder="Dependent Value">
ju                        </div>
ju                        
ju                     </div>
ju                     
jun                      <div id = "dateTimeDiv${field}"  style="display: none; margin-left: 0.8%;width:19.5%;">
juÇ                        <label class ="required-field" for="datetime" id="dateTimeFormats${field}" style='display:none;'></label>
jus                        <select  class="form-control" name="datetime" id='dateTime${field}' style='display:none;'>
juy                             <option disabled = "disabled" selected="selected" value="">Choose Date Time format</option>
juR                             <option value="HH:mm:ss.SSSZ">HH:MM:SS.SSSZ</option>
juP                             <option value="MMMM dd, yy">MMMM DD, YYYY</option>
juf                             <option value="MMM dd, yyyy hh:mm:ss a">MMM dd, yyyy hh:mm:ss a</option>
juj                             <option value="MMM dd HH:mm:ss ZZZZ yyyy">MMM dd HH:mm:ss ZZZZ yyyy</option>
jup                             <option value="yyyy-MM-dd'T'HH:mm:ss.SSS'Z'">yyyy-MM-dd'T'HH:mm:ss.SSS'Z'</option>
jub                             <option value="yyyy-MM-dd'T'HH:mm:ss">YYYY-MM-DD'T'HH:MM:SS</option>
jug                             <option value="MMM dd, yyyy hh:mm:ss a">MMM DD, YYYY HH:MM:SS AM</option>
juj                             <option value="dd/MMM/yyyy:HH:mm:ss ZZZZ">DD/MMM/YYYY:HH:MM:SS ZZZZ</option>
juj                             <option value="MMM dd HH:mm:ss ZZZZ yyyy">MMM DD HH:MM:SS ZZZZ YYYY</option>
ju`                             <option value="MMM dd yyyy HH:mm:ss">MMM DD YYYY HH:MM:SS</option>
juc                             <option value="MM/dd/yyyy hh:mm:ss a">MM/DD/YYYY HH:MM:SS AM</option>
juk                             <option value="MM/dd/yyyy hh:mm:ss a:SSS">MM/DD/YYYY HH:MM:SS AM:SSS</option>
juZ                             <option value="MMdd_HH:mm:ss.SSS">MMDD_HH:MM:SS.SSS</option>
juR                             <option value="MMdd_HH:mm:ss">MMDD_HH:MM:SS</option>
juh                             <option value="dd MMM yyyy HH:mm:ss*SSS">DD MMM YYYY HH:MM:SS*SSS</option>
ju`                             <option value="dd MMM yyyy HH:mm:ss">DD MMM YYYY HH:MM:SS</option>
jua                             <option value="dd/MMM/yyyy HH:mm:ss"">DD/MMM/YYYY HH:MM:SS</option>
ju_                             <option value="dd/MMM HH:mm:ss,SSS"">DD/MMM HH:MM:SS,SSS</option>
ju"                        </select>
ju                        </div>
ju                        
juk                        <div id = "dateDiv${field}" style="display: none; margin-left: 0.8%;width:16.0%;">
ju}                          <label class ="required-field"  for="date" id="dateFormats${field}" style='display:none;'></label>
juo                            <select  class="form-control" name="date" id='date${field}' style='display:none;'>
jub                                 <option selected="selected" value="">Choose Date Format</option>
juP                                 <option value="MM-dd-yyyy">MM-DD-YYYY</option>
juP                                 <option value="dd-MM-yyyy">DD-MM-YYYY</option>
juT                                 <option value="dd/MM/yyyy, yy">DD/MM/YYYY</option>
juK                                <option value="yy/MM/dd">YY/MM/DD</option>
juO                                <option value="yyyy/MM/dd">YYYY/MM/DD</option>
juI                                <option value="M/d/yyy">M/D/yyy</option>
juK                                <option value="d/M/yyyy">D/M/YYYY</option>
juM                                <option value="yyyy/M/dd">YYYY/M/DD</option>
juK                                <option value="ddMMyYYy">DDMMYYYY</option>
juO                                <option value="yyyy-MM-dd">YYYY-MM-DD</option>
ju&                            </select>
ju!                          </div>
ju
jun                          <div id = "timeDiv${field}"  style="display: none; margin-left: 0.8%;width:16.0%;">
ju~                            <label class ="required-field"  for="time" style='display:none;' id="timeFormats${field}"</label>
jun                           <select  class="form-control" name="time" id='time${field}' style='display:none;'>
juM                                <option value="">Choose Time Format</option>
juK                                <option value="hh:mm:ss">HH:MM:SS</option>
juS                                <option value="HH:mm:ss zzz">HH:MM:SS ZZZ</option>
juU                                <option value="HH:mm:ss.SSSZ">HH:MM:SS.SSSZ</option>
ju%                           </select>
ju#                            </div>
ju                     
ju                     
ju-                                            
ju$                     <!-- Modal -->
juÜ<div class="modal fade" id="chooseValues${field}" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
ju-  <div class="modal-dialog" role="document">
ju     <div class="modal-content">
ju!      <div class="modal-header">
juJ        <h5 class="modal-title" id="exampleModalLabel">Choose Values</h5>
juU        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
ju2          <span aria-hidden="true">&times;</span>
ju        </button>
ju      </div>
ju      <div class="modal-body">
ju%        <div class="form-container">
ju
ju:          <h6>Upload Values in the form of text file</h6>
ju
juà<!--          <div id="uploadFileDiv${field}"  class="form-group col-md-8" style="margin-top: 0.4%; display:flex; margin-left: 19%">-->
ju            <div class="mb-3">
ju™              <input onchange="readFile(event,'${field}');" id="text_file_id${field}" style="display:flex;  accept=".txt" class="form-control" type="file" id="formFile">
ju            </div>
ju<!--          </div>-->
ju
ju          <br><br><br>
ju          
juA          <h6 style="font-size: medium;margin-top: -10%">OR</h6>
ju
juü          <button data-dismiss="modal" style="margin-left: 40%;"  type="button" class="btn btn-primary" data-toggle="modal" data-target="#typeValues${field}">
ju            Type Values
ju          </button>
ju
ju        </div>
ju      </div>
ju!      <div class="modal-footer">
ju\        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
juL        <button type="button" class="btn btn-primary">Save changes</button>
ju      </div>
ju    </div>
ju	  </div>
ju</div>
ju
ju
ju
ju<!-- Modal -->
juÑ<div class="modal fade" id="typeValues${field}" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
ju-  <div class="modal-dialog" role="document">
ju     <div class="modal-content">
ju!      <div class="modal-header">
juH        <h5 class="modal-title" id="exampleModalLabel">Type Values</h5>
juU        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
ju2          <span aria-hidden="true">&times;</span>
ju        </button>
ju      </div>
ju      <div class="modal-body">
ju%        <div class="form-container">
ju
juk          <textarea style="margin-right: 50%" id="textArea${field}" placeholder="Enter Values"></textarea>
ju          <div id = "list"> 
juf          <ul style='font-size:15px;font-family: "Bodoni", serif;margin-left: 47%; margin-top: -42%'>
juT               <li> Please Enter the values in newline without any delimiters</li> 
ju"               <li> Example:</li>
ju               <ul>
ju#                   <li> Val1 </li>
ju#                   <li> Val2 </li>
ju#                   <li> Val3 </li>
ju               </ul>
ju
ju          </ul>
ju          </div>
ju      
ju
ju        </div>
ju      </div>
ju!      <div class="modal-footer">
ju\        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
juL        <button type="button" class="btn btn-primary">Save changes</button>
ju      </div>
ju    </div>
ju	  </div>
ju</div>
ju                     
ju                  
ju               
ju                  </div>
ju                  </div>
ju                 `
ju;        document.getElementById("card-2").appendChild(row)
ju    }
ju
ju.    var name = document.createElement('div');
ju$    row.setAttribute("id", `name`);
ju
juã    name.innerHTML = `<button style="margin-left:45%; margin-top: 1%; margin-bottom: 1%" class="btn btn-dark" type="submit">Save</button>`
ju8    document.getElementById("card-2").appendChild(name)
ju
ju}
ju
ju
ju/*function typeMandatory() {
ju    var emptyFields = 0
ju6    for (var i = 1, j = 0; i <= fieldCount; i++,j++){
ju[        var typeField = document.getElementById(`type${fields[0][j]}`.replaceAll('"', ''))
ju$        if (typeField.value == ""){
juv            document.getElementById(`typeEmpty${fields[0][j]}`.replaceAll('"', '')).innerHTML="Please select a type";
juh            document.getElementById("fields-empty").innerHTML = "You have left mandatory fields empty!"
ju            emptyFields += 1
ju
        }
ju        else {
jub            document.getElementById(`typeEmpty${fields[0][j]}`.replaceAll('"', '')).innerHTML="";
ju
        }
ju    }
ju    return (emptyFields == 0)
ju}*/
ju
ju
ju"function toggleYesOrNo(element) {
ju:    let oldValue = document.getElementById(element).value
ju&    if (oldValue === "Not Allowed") {
ju;        document.getElementById(element).value = "Allowed"
ju        return
ju    }
ju;    document.getElementById(element).value = "Not Allowed"
ju}
ju
juΩfunction showDateTimeOptions(value, dateDivID, dateFormatId, dateId, timeDivID, timeFormatId, timeId, dateTimeDivID, dateTimeFormatId, dateTimeId, lengthDivId, valueDivId, uploadFileDiv) {
ju?    var dateDivIDElement = document.getElementById(dateDivID);
juC    var dateFormatElement = document.getElementById(dateFormatId);
ju?    var dateIdFormatElement = document.getElementById(dateId);
ju?    var timeDivIDElement = document.getElementById(timeDivID);
juC    var timeFormatElement = document.getElementById(timeFormatId);
ju?    var timeIdFormatElement = document.getElementById(timeId);
juA    var lengthDivElement = document.getElementById(lengthDivId);
ju?    var valueDivElement = document.getElementById(valueDivId);
juG    var dateTimeDivIDElement = document.getElementById(dateTimeDivID);
juK    var dateTimeFormatElement = document.getElementById(dateTimeFormatId);
juG    var dateTimeIdFormatElement = document.getElementById(dateTimeId);
juD    var uploadFileElement = document.getElementById(uploadFileDiv);
ju
ju     if (value === 'DateTime') {
juä        showDateTimeField(uploadFileElement, dateDivIDElement, dateFormatElement, dateIdFormatElement, timeDivIDElement, timeFormatElement, timeIdFormatElement, lengthDivElement, valueDivElement, dateTimeDivIDElement, dateTimeFormatElement, dateTimeIdFormatElement)
ju#    } else if (value === 'Date') {
juÛ        showDateField(dateDivIDElement, dateFormatElement, dateIdFormatElement, timeDivIDElement, timeFormatElement, timeIdFormatElement, lengthDivElement, valueDivElement, dateTimeDivIDElement, dateTimeFormatElement, dateTimeIdFormatElement)
ju#    } else if (value === 'Time') {
juÛ        showTimeField(dateDivIDElement, dateFormatElement, dateIdFormatElement, timeDivIDElement, timeFormatElement, timeIdFormatElement, lengthDivElement, valueDivElement, dateTimeDivIDElement, dateTimeFormatElement, dateTimeIdFormatElement)
ju    } else {
ju1        dateDivIDElement.style.display = 'none';
ju2        dateFormatElement.style.display = 'none';
ju4        dateIdFormatElement.style.display = 'none';
ju5        dateTimeDivIDElement.style.display = 'none';
ju6        dateTimeFormatElement.style.display = 'none';
ju8        dateTimeIdFormatElement.style.display = 'none';
ju1        timeDivIDElement.style.display = 'none';
ju2        timeFormatElement.style.display = 'none';
ju4        timeIdFormatElement.style.display = 'none';
ju5        dateTimeDivIDElement.style.display = 'none';
ju6        dateTimeFormatElement.style.display = 'none';
ju8        dateTimeIdFormatElement.style.display = 'none';
ju3        // valueDivElement.style.display = 'flex';
ju2        lengthDivElement.style.display = 'block';
ju    }
ju}
ju
juˆfunction showDateField(dateDivIDElement, dateFormatElement, dateIdFormatElement, timeDivIDElement, timeFormatElement, timeIdFormatElement, lengthDivElement, valueDivElement, dateTimeDivIDElement, dateTimeFormatElement, dateTimeIdFormatElement) {
ju-    dateDivIDElement.style.display = 'flex';
ju/    dateFormatElement.style.display = 'block';
ju1    dateIdFormatElement.style.display = 'block';
ju-    timeDivIDElement.style.display = 'none';
ju.    timeFormatElement.style.display = 'none';
ju0    timeIdFormatElement.style.display = 'none';
ju1    dateTimeDivIDElement.style.display = 'none';
ju2    dateTimeFormatElement.style.display = 'none';
ju4    dateTimeIdFormatElement.style.display = 'none';
ju/    // valueDivElement.style.display = 'none';
ju-    lengthDivElement.style.display = 'none';
ju}
ju
juˆfunction showTimeField(dateDivIDElement, dateFormatElement, dateIdFormatElement, timeDivIDElement, timeFormatElement, timeIdFormatElement, lengthDivElement, valueDivElement, dateTimeDivIDElement, dateTimeFormatElement, dateTimeIdFormatElement) {
ju-    timeDivIDElement.style.display = 'flex';
ju/    timeFormatElement.style.display = 'block';
ju1    timeIdFormatElement.style.display = 'block';
ju-    dateDivIDElement.style.display = 'none';
ju.    dateFormatElement.style.display = 'none';
ju0    dateIdFormatElement.style.display = 'none';
ju1    dateTimeDivIDElement.style.display = 'none';
ju2    dateTimeFormatElement.style.display = 'none';
ju4    dateTimeIdFormatElement.style.display = 'none';
ju/    // valueDivElement.style.display = 'none';
ju-    lengthDivElement.style.display = 'none';
ju}
ju
juêfunction showDateTimeField(uploadFileDivElement, dateDivIDElement, dateFormatElement, dateIdFormatElement, timeDivIDElement, timeFormatElement, timeIdFormatElement, lengthDivElement, valueDivElement, dateTimeDivIDElement, dateTimeFormatElement, dateTimeIdFormatElement) {
ju1    dateTimeDivIDElement.style.display = 'flex';
ju3    dateTimeFormatElement.style.display = 'block';
ju5    dateTimeIdFormatElement.style.display = 'block';
ju4    // uploadFileDivElement.style.display = 'none';
ju-    dateDivIDElement.style.display = 'none';
ju.    dateFormatElement.style.display = 'none';
ju0    dateIdFormatElement.style.display = 'none';
ju-    timeDivIDElement.style.display = 'none';
ju.    timeFormatElement.style.display = 'none';
ju0    timeIdFormatElement.style.display = 'none';
ju/    // valueDivElement.style.display = 'none';
ju-    lengthDivElement.style.display = 'none';
ju}
ju
ju&function readFile(event, fieldName) {
juN    var value = document.getElementById(`text_file_id${fieldName}`).files[0];
ju    if (value != null) {
ju'        let reader = new FileReader();
ju7        reader.addEventListener('load', function (e) {
ju'            let text = e.target.result
ju:            console.log(JSON.stringify(text.split('\n')))
juO            localStorage.setItem(fieldName, JSON.stringify(text.split('\n')));
ju        });
ju!        reader.readAsText(value)
ju    }
ju    return null;
ju}
ju
jufunction addDataToJson() {
ju8    for (var i = 1, j = 0; i <= fieldCount; i++, j++) {
ju        let jsonObj = {}
ju!        var field = fields[0][j]
ju=        var configName = document.getElementById("fileName")
juV        var type = document.getElementById(`type${fields[0][j]}`.replaceAll('"', ''))
juh        var value = document.getElementById(`text_file_id${fields[0][j]}`.replaceAll('"', '')).files[0]
jua        var typedValues = document.getElementById(`textArea${fields[0][j]}`.replaceAll('"', ''))
ju`        var fixed_len = document.getElementById(`fixed-len${fields[0][j]}`.replaceAll('"', ''))
jub        var dependentOn = document.getElementById(`dependent${fields[0][j]}`.replaceAll('"', ''))
juc        var dependentValue = document.getElementById(`dep-val${fields[0][j]}`.replaceAll('"', ''))
ju\        var dateFormat = document.getElementById(`date${fields[0][j]}`.replaceAll('"', ''))
ju\        var timeFormat = document.getElementById(`time${fields[0][j]}`.replaceAll('"', ''))
jud        var dateTimeFormat = document.getElementById(`dateTime${fields[0][j]}`.replaceAll('"', ''))
jua        var nullValues = document.getElementById(`allowNull${fields[0][j]}`.replaceAll('"', ''))
juO        var configCheckBox = document.getElementById("configCheckBox").checked
ju
juJ        jsonObj["configName"] = document.getElementById("fileName").value
ju?        console.log(document.getElementById("fileName").value)
ju3        jsonObj["datetime"] = dateTimeFormat.value
ju+        jsonObj["date"] = dateFormat.value
ju+        jsonObj["time"] = timeFormat.value
ju0        jsonObj["nullValue"] = nullValues.value
ju&        console.log(nullValues.value)
ju%        jsonObj["fieldName"] = field
ju%        jsonObj["type"] = type.value
ju        if (!configCheckBox) {
ju'            jsonObj["configName"] = ""
ju
        }
ju        if (value != null) {
juH            jsonObj["values"] = JSON.parse(localStorage.getItem(field))
ju5            console.log(localStorage.getItem(field))
ju
        }
ju(        if (typedValues.value !== '') {
ju>            jsonObj["values"] = typedValues.value.split('\n')
ju
        }
ju,        jsonObj["length"] = fixed_len.value
ju3        jsonObj["dependentOn"] = dependentOn.value
ju9        jsonObj["dependentValue"] = dependentValue.value
ju%        const typeValue = type.value
juX        if (typeValue !== "Date" && typeValue !== "Time" && typeValue !== "DateTime") {
ju%            jsonObj["datetime"] = ''
ju!            jsonObj["date"] = ''
ju!            jsonObj["time"] = ''
ju+        } else if (typeValue === "Date") {
ju%            jsonObj["datetime"] = ''
ju#            jsonObj["length"] = ''
ju!            jsonObj["time"] = ''
ju+        } else if (typeValue === "Time") {
ju%            jsonObj["datetime"] = ''
ju!            jsonObj["date"] = ''
ju#            jsonObj["length"] = ''
ju/        } else if (typeValue === "DateTime") {
ju#            jsonObj["length"] = ''
ju!            jsonObj["date"] = ''
ju!            jsonObj["time"] = ''
ju
        }
ju
ju        payload.push(jsonObj)
ju    }
ju    console.log(payload)
ju}
ju
ju"async function sendConfigData() {
ju    addDataToJson()
ju.    var resp = await fetch('add-meta-data', {
ju        method: 'POST',
ju&        body: JSON.stringify(payload)
ju    })
ju
ju    if (resp.status === 200) {
ju*        var jsonData = await resp.json();
ju        console.log(jsonData)
ju    }
ju}
ju
ju!async function displayErrors() {
ju    emptyErrorList()
juN    document.getElementById("config_name_validation").style.display = 'none';
ju     if (validateConfigName()) {
ju?        document.getElementById("fields-empty").innerHTML = ""
ju        loadingEffect()
ju        sendConfigData()
ju.        const response = await fetch('csv', {
ju            method: 'POST',
ju)            body: JSON.stringify(result)
ju        })
ju
ju'        if (response.status === 200) {
ju2            var jsonData = await response.json();
ju            loadingEffect();
ju"            console.log(jsonData)
ju            traverse(jsonData)
ju
        }
ju<        var loader = document.getElementById("button-load")
ju,        loader.style.visibility = "hidden";
ju        payload = []
ju        configName = []
ju    }
ju}
ju
jufunction traverse(object) {
ju;    let errorBase = document.getElementById("error-msgs");
ju    for (var i in object) {
ju,        let key = Object.keys(object[i])[0]
ju        console.log(key)
ju&        key = key.replaceAll('"', '')
ju-        let value = Object.values(object[i])
ju(        createDivElement(key, value[0])
juA        let fieldsDivElement = document.getElementById(`${key}`)
ju1        if (fieldsDivElement.innerHTML === '') {
ju             removeErrorDiv(key)
ju
        }
ju    }
ju&    if (errorBase.innerHTML === '') {
ju'        createSuccessErrMsg(errorBase)
ju    }
ju}
ju
ju*function createSuccessErrMsg(errorBase) {
ju-    let row = document.createElement("div");
ju    row.innerHTML = `
juF        <div style="display:flex; flex-direction: row;padding:20px;">
juº          <div style="width: 92%;font-size:20px; font-weight:400; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.25);  border-radius: 3px;  padding:38px; text-align:left;color:white;margin:auto">
juO          <marquee scrollamount="12">No Error Found In Your CSV File</marquee>
ju          </div>
ju      </div>`;
ju
ju     errorBase.appendChild(row);
ju}
ju
jufunction removeErrorDiv(key) {
ju;    let errorBase = document.getElementById("error-msgs");
ju9    var child = document.getElementById(key + " error");
ju"    errorBase.removeChild(child);
ju}
ju
ju(function createDivElement(key, value) {
ju"    key = key.replaceAll('"', '')
ju;    let errorBase = document.getElementById("error-msgs");
ju-    let row = document.createElement("div");
ju+    row.setAttribute("id", key + " error")
ju    row.innerHTML = `
juY                <div style="display:flex; flex-direction: row;padding:20px;width:700px">
ju≈                  <div style="width: 150%;font-size:20px; font-weight:400; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.25);  border-radius: 3px;  padding:18px; text-align:left;color:white;margin:auto">
ju1                  <p style="margin:auto;">${key}
juà                  <svg  style="float:right;" width="15" height="25" viewBox="0 0 9 7" fill="black" xmlns="http://www.w3.org/2000/svg" >
juª                  <path style="display:block;z-index:-1" d="M5.81565 1.5L4.4261 3.75802L2.86285 1.5H5.81565Z" stroke="black" stroke-width="4" onclick="goUp('${key}')" id="UpDrop${key}"/>
ju                  </svg>
ju                  </p>
ju                  </div>
ju              </div>
jud              <div class="card-panel left-align" style=" width:63%; font-size:20px;font-weight:200;
ju-                background: radial-gradient(
ju            hsl(30, 41%, 48%),
ju            hsl(199, 14%, 49%)
ju\    ) fixed ; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.25); border-radius: 3px; padding:50px;
juk              text-align:left; color:black; display:none;width: 100%;margin-left: 20%;border-radius: 9px;"
ju!              id="${key}"></div>
ju          </div>
ju        `;
ju
ju    errorBase.appendChild(row)
ju    for (i in value) {
ju%        console.log(value[i].length)
ju        if (i === 'Duplicate Errors' && value[i].length !== 0 && document.getElementById("Duplicate Errors error") === null) {
ju1            createDuplicationErrMsg(value[i], i)
ju
        }
ju        console.log(i)
juA        if (value[i].length !== 0 && i !== 'Duplicate Errors') {
ju?            createTableForDisplayingErrorMsg(value[i], key, i)
ju
        }
ju    }
ju}
ju
ju/function createDuplicationErrMsg(value, key) {
ju;    let errorBase = document.getElementById("error-msgs");
ju-    let row = document.createElement("div");
ju+    row.setAttribute("id", key + " error")
ju    row.innerHTML = `
juF        <div style="display:flex; flex-direction: row;padding:20px;">
juº          <div style="width: 92%;font-size:20px; font-weight:400; box-shadow: 0 4px 10px rgba(0, 0, 0, 0.25);  border-radius: 3px;  padding:18px; text-align:left;color:white;margin:auto">
ju)          <p style="margin:auto;">${key}
juÄ          <svg  style="float:right;" width="15" height="25" viewBox="0 0 9 7" fill="black" xmlns="http://www.w3.org/2000/svg" >
ju≥          <path style="display:block;z-index:-1" d="M5.81565 1.5L4.4261 3.75802L2.86285 1.5H5.81565Z" stroke="black" stroke-width="4" onclick="goUp('${key}')" id="UpDrop${key}"/>
ju          </svg>
ju          </p>
ju          </div>
ju      </div>
juá      <div class="card-panel left-align" style="margin:auto; width:83%; font-size:20px; font-weight:200;  background: radial-gradient(
ju            hsl(30, 41%, 48%),
ju            hsl(199, 14%, 49%)
ju    ) fixed;
juÄ      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.25); border-radius: 3px; padding:50px; text-align:left; color:black; display:none;
ju      "
ju      id="${key}"></div>
ju      </div>
ju    `;
ju
ju    errorBase.appendChild(row)
ju.    createTableForDuplicateErrors(value, key)
ju}
ju
ju5function createTableForDuplicateErrors(value, key) {
ju(    let p = document.createElement("p")
ju"    p.setAttribute("id", "error")
ju    p.style.marginTop = "0px"
juW    p.innerHTML = `<b style="font-weight: 900;">${key} present in rows:</b><br/><br/>`
ju0    let table = document.createElement("table")
ju    console.log(table)
ju    let i = 0;
ju&    console.log("size", value.length)
ju1    let firstRow = document.createElement("tr");
ju4    let firstHeading = document.createElement("td")
ju5    let secondHeading = document.createElement("td")
ju+    firstHeading.innerHTML = "Row Number "
ju7    secondHeading.innerHTML = "Copied From Row Number"
ju(    firstRow.appendChild(firstHeading);
ju)    firstRow.appendChild(secondHeading);
ju     table.appendChild(firstRow)
ju    while (i < value.length) {
ju3        let newRow = document.createElement("tr");
ju0        let td_1 = document.createElement("td")
ju0        let td_2 = document.createElement("td")
ju"        td_1.innerHTML = value[i]
ju&        td_2.innerHTML = value[i + 1]
ju"        newRow.appendChild(td_1);
ju"        newRow.appendChild(td_2);
ju"        table.appendChild(newRow)
ju        i = i + 2;
ju    }
ju
ju    p.appendChild(table)
ju3    let parent = document.getElementById(`${key}`)
ju    parent.appendChild(p)
ju}
ju
ju>function createTableForDisplayingErrorMsg(value, key, type) {
ju(    let p = document.createElement("p")
ju"    p.setAttribute("id", "error")
ju    p.style.marginTop = "0px"
juX    p.innerHTML = `<b style="font-weight: 900;">${type} present in rows:</b><br/><br/>`
ju0    let table = document.createElement("table")
ju    console.log(table)
ju    let i = 0;
ju    let j = 0;
ju&    console.log("size", value.length)
ju    while (i < value.length) {
ju3        let newRow = document.createElement("tr");
ju0        while (j < i + 5 && j < value.length) {
ju2            let td = document.createElement("td")
ju$            td.innerHTML = value[j]
ju$            newRow.appendChild(td);
ju            j++;
ju
        }
ju"        table.appendChild(newRow)
ju        i = j;
ju    }
ju    p.appendChild(table)
ju3    let parent = document.getElementById(`${key}`)
ju    parent.appendChild(p)
ju}
ju
jufunction goDown(key) {
juÂ    document.getElementById(`DownDrop${key}`).outerHTML = `<path style="display:block;z-index:-1" d="M5.81565 1.5L4.4261 3.75802L2.86285 1.5H5.81565Z" stroke="black" stroke-width="4" onclick="goUp('${key}')" id="UpDrop${key}"/>`
ju=    document.getElementById(`${key}`).style.display = "none"
ju}
ju
jufunction goUp(key) {
juƒ    document.getElementById(`UpDrop${key}`).outerHTML = `  <path d="M5.81565 5L4.4261 2.74198L2.86285 5H5.81565Z" stroke="black" stroke-width="4" onclick="goDown('${key}')" id="DownDrop${key}"/>`
ju>    document.getElementById(`${key}`).style.display = "block"
ju}
ju
ju
jufunction emptyErrorList() {
ju6    const el = document.getElementById("error-msgs");
ju    while (el.firstChild) {
ju&        el.removeChild(el.firstChild)
ju    }
ju}
ju
jufunction loadingEffect() {
ju8    var loader = document.getElementById("button-load")
ju)    loader.style.visibility = "visible";
ju}
ÖÑHTTP/1.1 404 NOT FOUND
ÖÑ'Content-Type: text/html; charset=utf-8
ÖÑContent-Length: 164
ÖÑ
ÖÑ<!DOCTYPE html>
ÖÑ<html lang="en">
ÖÑ<head>
ÖÑ    <meta charset="UTF-8">
ÖÑ&    <title>404 Page Not Found</title>
ÖÑ</head>
ÖÑ<body>
ÖÑ<h1>404 Page Not Found</h1>
ÖÑ</body>
ÖÑ</html>
ÖÑ
áÜHTTP/1.1 200 Ok
áÜ
çè{Export=[2, 3, 4]}
óñ{2=[1], 3=[1]}
óô{2=[1], 4=[3]}
